.text
.global  _start
_start:

//cmpb    $0x2c,0x10(%rsp,%rdi,1)
//cmpb    $0x2c,0x10(%rsp,%rdi)
cmpb    $0x2c,0x10(%rsp, 1)
cmpb    $0x2c,0x10(%rsp)

//cmpw    $0x2c,0x10(%rsp,%rdi,1)
//cmpw    $0x2c,0x10(%rsp,%rdi)
cmpw    $0x2c,0x10(%rsp, 1)
cmpw    $0x2c,0x10(%rsp)

//cmpl    $0x2c,0x10(%rsp,%rdi,1)
//cmpl    $0x2c,0x10(%rsp,%rdi)
cmpl    $0x2c,0x10(%rsp, 1)
cmpl    $0x2c,0x10(%rsp)

//cmpq    $0x2c,0x10(%rsp,%rdi,1)
//cmpq    $0x2c,0x10(%rsp,%rdi)
cmpq    $0x2c,0x10(%rsp, 1)
cmpq    $0x2c,0x10(%rsp)

//movb    $0x2c,0x10(%rsp,%rdi,1)
//movb    $0x2c,0x10(%rsp,%rdi)
movb    $0x2c,0x10(%rsp, 1)
movb    $0x2c,0x10(%rsp)

//movw    $0x2c,0x10(%rsp,%rdi,1)
//movw    $0x2c,0x10(%rsp,%rdi)
//movw    $0x2c,0x10(%rsp, 1)
//movw    $0x2c,0x10(%rsp)

//movl    $0x2c,0x10(%rsp,%rdi,1)
//movl    $0x2c,0x10(%rsp,%rdi)
movl    $0x2c,0x10(%rsp, 1)
movl    $0x2c,0x10(%rsp)

//movq    $0x2c,0x10(%rsp,%rdi,1)
//movq    $0x2c,0x10(%rsp,%rdi)
movq    $0x2c,0x10(%rsp, 1)
movq    $0x2c,0x10(%rsp)

int     $0x80
